{{- if .Values.customResourceDefinitions.create }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: api-fas.streaming.sneaksanddata.com
spec:
  group: streaming.sneaksanddata.com
  scope: Namespaced
  names:
    plural: api-fas
    singular: api-fa
    kind: RestApiFixedAuth
    shortNames:
      - api-fas
  versions:
    - name: v1beta1
      served: true
      storage: true
      additionalPrinterColumns:
        - name: Url Template
          type: string
          jsonPath: .spec.urlTemplate
        - name: Refresh Interval
          type: string
          jsonPath: .spec.changeCaptureIntervalSeconds
        - name: Sink location
          type: string
          jsonPath: .spec.sinkLocation
        - name: Phase
          type: string
          jsonPath: .status.phase
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                credentialSecretRef:
                  description: |
                    Name of the secret containing the REST API credentials.
                    Should have then key named 'ARCANE__AUTHHEADERS' that contains fixed header names and values used to authenticate.
                  type: object
                  properties:
                    name:
                      type: string
                jobTemplateRef:
                  description: |
                    Name of the job template to be used for the streaming job if stream is running in normal mode.
                  type: object
                  properties:
                    name:
                      type: string
                    kind:
                      type: string
                    apiGroup:
                      type: string
                  default:
                    apiGroup: streaming.sneaksanddata.com
                    kind: StreamingJobTemplate
                    name: standard-job
                backfillJobTemplateRef:
                  description: |
                    Name of the job template to be used for the streaming job if stream is running in backfill mode.
                  type: object
                  properties:
                    name:
                      type: string
                    kind:
                      type: string
                    apiGroup:
                      type: string
                  default:
                    apiGroup: streaming.sneaksanddata.com
                    kind: StreamingJobTemplate
                    name: large-job
                templatedFields:
                  type: array
                  default: []
                  description: Configurations for templated parts of the url
                  items:
                    type: object
                    properties:
                      fieldType:
                        type: string
                        enum:
                          - RESPONSE_PAGE
                          - FILTER_DATE_FROM
                          - FILTER_DATE_BETWEEN_FROM
                          - FILTER_DATE_BETWEEN_TO
                      fieldName:
                        type: string
                      formatString:
                        type: string
                      placement:
                        type: string
                        default: URL
                        enum:
                          - URL
                          - BODY
                urlTemplate:
                  type: string
                  description: Url template for this source.
                bodyTemplate:
                  type: string
                  default: ""
                  description: Optional body template for this source.
                httpMethod:
                  type: string
                  default: "GET"
                  description: Http method to use when requesting data.                  
                backFillStartDate:
                  type: integer
                  description: Start date for the backfill.
                changeCaptureIntervalSeconds:
                  type: integer
                  description: How long to wait before polling for next result set. Can be from 60 to 3600 seconds.
                  minimum: 60
                  maximum: 86400
                rowsPerGroup:
                  type: integer
                  description: Number of json lines in a single file.
                groupingIntervalSeconds:
                  type: integer
                  description: Max time to wait for rowsPerGroup to accumulate. Can be from 1 to 60 seconds.
                  minimum: 1
                  maximum: 60
                lookBackInterval:
                  type: integer
                  description: Number of seconds to look back when determining first set of changes to extract.
                httpTimeout:
                  type: integer
                  description: Number of seconds to wait for result before http requests should time out.
                sinkLocation:
                  type: string
                  description: Data location for multiline json files.
                internalRateLimitCount:
                  type: integer
                  minimum: 1
                  maximum: 1000
                  default: 1
                  description: Internal rate limit, number of requests
                internalRateLimitInterval:
                  type: integer
                  minimum: 1
                  maximum: 300
                  default: 60
                  description: Internal rate limit, evaluation interval
                apiSchemaEncoded:
                  type: string
                  description: OpenApi schema for the response, as base64-encoded string
            status:
              type: object
              properties:
                phase:
                  type: string
                  enum:
                    - RESTARTING
                    - RUNNING
                    - RELOADING
                    - TERMINATING
                    - STOPPED
                    - SUSPENDED
                    - FAILED
                conditions:
                  type: array
                  items:
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      message:
                        type: string
                      type:
                        type: string
                        enum:
                          - WARNING
                          - ERROR
                          - INFO
                          - READY
                      status:
                        type: string
                        enum: 
                          - "True"
                          - "False"
{{- end }}
